{
    "pattern": "<article><h2{*}href={*}>{%}</a>{*}<blockquote>{%}</blockquote>{*}Source: <a href=\"{%}\"{*}</article>",
    "source": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>home — Plurrrr</title>\n    <meta name=\"author\" content=\"John Bokma\">\n    <meta name=\"description\" content=\"home — John Bokma&#x27;s tumblelog\">\n    <link rel=\"stylesheet\" href=\"soothe.css\">\n    <link rel=\"alternate\" title=\"Plurrrr\" type=\"application/rss+xml\"\n          href=\"https://plurrrr.com/feed.rss\">\n    <link rel=\"alternate\" title=\"Plurrrr\" type=\"application/json\"\n          href=\"https://plurrrr.com/feed.json\">\n    <meta property=\"og:url\" content=\"https://plurrrr.com/\">\n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:title\" content=\"home\">\n    <meta property=\"og:image\"\n          content=\"https://plurrrr.com/images/plurrrr-logo.png\">\n    <meta property=\"og:description\" content=\"Link to: https://plurrrr.com/\">\n    <meta name=\"twitter:card\" content=\"summary\">\n    <meta name=\"twitter:image:alt\" content=\"Plurrrr logo\">\n  </head>\n  <body>\n    <div class=\"tl-page\">\n      <header class=\"tl-main-header\">\n        <div class=\"tl-title\">\n          <h1>Plurrrr</h1>\n          <span>home</span>\n        </div>\n        <nav>\n          <ul class=\"tl-navigation\">\n            <li><a href=\"/\">home</a></li>\n            <li><a href=\"/subscribe.html\">subscribe</a></li>\n            <li><a href=\"/tags/\">tags</a></li>\n            <li><a href=\"/about.html\">about</a></li>\n          </ul>\n        </nav>\n      </header>\n      <main>\n<time class=\"tl-date\" datetime=\"2023-07-07\"><a href=\"archive/2023/07/07.html\" title=\"Nix shell template, IN vs. ANY, and Corinna in the Perl Core\">Fri 07 Jul 2023</a></time>\n<article>\n<h2 id=\"nix-shell-template\"><a href=\"https://plurrrr.com/archive/2023/07/07.html#nix-shell-template\">Nix shell template</a></h2>\n<blockquote>\n<p>Nix shells are the best tool for creating software development\nenvironments right now. This article provides a template to get you\nstarted with Nix shells from scratch, and explains how to add common\nfeatures.</p>\n</blockquote>\n<p>Source: <a href=\"https://paperless.blog/nix-shell-template\">Nix shell\ntemplate</a>, an article by\nVictor Engmark.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nix.html\">nix</a></li></ul>\n</article>\n<article>\n<h2 id=\"til---in-is-not-the-same-as-any\"><a href=\"https://plurrrr.com/archive/2023/07/07.html#til---in-is-not-the-same-as-any\">TIL - IN is not the same as ANY</a></h2>\n<blockquote>\n<p>Not exactly from today, rather from a month or two ago, but still on\nmy “noteworthy list”. So after a remarkably long quiet period of no\nsurprises (Postgres doesn’t generally surprise one badly), I managed\nto learn something controversial - a thing considered generally\ngood, using ANY instead of IN-list in this case, can have downsides\nnevertheless!</p>\n</blockquote>\n<p>Source: <a href=\"https://kmoppel.github.io/2023-07-04-til-in-is-not-the-same-as-any/\">TIL - IN is not the same as\nANY</a>,\nan article by Kaarel Moppel.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/database.html\">database</a></li></ul>\n</article>\n<article>\n<h2 id=\"corinna-in-the-perl-core\"><a href=\"https://plurrrr.com/archive/2023/07/07.html#corinna-in-the-perl-core\">Corinna in the Perl Core</a></h2>\n<blockquote>\n<p>It’s been a years-long, painful process, but <a href=\"https://www.reddit.com/r/perl/comments/14p3moz/perl_v5380_is_now_available/\">with the release of\nPerl\nv.5.38,0</a>,\nthe first bits of Corinna have been added to the Perl core. For\nthose who have not been following along, Corinna is a project to add\na new object system to the Perl core. Note that it’s not taking\nanything away from Perl; it’s adding a core object system for better\nmemory consumption, performance, and elegance.</p>\n</blockquote>\n<p>Source: <a href=\"https://ovid.github.io/articles/corinna-in-the-perl-core.html\">Corinna in the Perl\nCore</a>,\nan article by Curtis “Ovid” Poe.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/perl.html\">perl</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-06\"><a href=\"archive/2023/07/06.html\" title=\"Elegant new orchid, Demystifying Text Data, and Image Upscaling\">Thu 06 Jul 2023</a></time>\n<article>\n<h2 id=\"an-elegant-new-orchid-is-found-hiding-in-plain-sight\"><a href=\"https://plurrrr.com/archive/2023/07/06.html#an-elegant-new-orchid-is-found-hiding-in-plain-sight\">An elegant new orchid is found hiding in plain sight</a></h2>\n<blockquote>\n<p>It is extremely rare for a new plant species to be discovered in\nJapan, a nation where flora has been extensively studied and\ndocumented. Nevertheless, Professor Suetsugu Kenji and his\nassociates have recently uncovered a stunning new species of orchid\nwhose rosy pink petals bear a striking resemblance to glasswork.</p>\n</blockquote>\n<p>Source: <a href=\"https://phys.org/news/2023-03-elegant-orchid-plain-sight.html\">An elegant new orchid is found hiding in plain\nsight</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nature.html\">nature</a></li></ul>\n</article>\n<article>\n<h2 id=\"demystifying-text-data-with-the-unstructured-python-library\"><a href=\"https://plurrrr.com/archive/2023/07/06.html#demystifying-text-data-with-the-unstructured-python-library\">Demystifying Text Data with the unstructured Python Library</a></h2>\n<blockquote>\n<p>In the world of data, textual data stands out as being particularly\ncomplex. It doesn’t fall into neat rows and columns like numerical\ndata does. As a side project, I’m in the process of developing my\nown personal AI assistant. The objective is to use the data within\nmy notes and documents to answer my questions. The important benefit\nis all data processing will occure locally on my computer, ensuring\nthat no documents are uploaded to the cloud, and my documents will\nremain private.</p>\n<p>To handle such unstructured data, I’ve found the <code>unstructured</code>\nPython library to be extremely useful. It’s a flexible tool that\nworks with various document formats, including Markdown, , XML, and\nHTML documents.</p>\n</blockquote>\n<p>Source: <a href=\"https://saeedesmaili.com/demystifying-text-data-with-the-unstructured-python-library/\">Demystifying Text Data with the unstructured Python Library\n(+alternatives)</a>,\nan article by Saeed Esmaili.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"image-upscaling-using-neural-networks\"><a href=\"https://plurrrr.com/archive/2023/07/06.html#image-upscaling-using-neural-networks\">Image Upscaling Using Neural Networks</a></h2>\n<blockquote>\n<p>Do you remember those classic scenes from CSI TV series? When a\ndetective, peering at a pixelated image from a surveillance camera,\ninstructs the tech whiz, &quot;zoom enhance&quot;. With some keyboard strokes,\nthe blurry image transforms, revealing a perfectly clear license\nplate. We've all had a good laugh at that, dismissing it as pure\nHollywood bullshit, right?</p>\n</blockquote>\n<p>Source: <a href=\"https://boostpixels.com/image-upscaling-using-neural-networks\">Image Upscaling Using Neural\nNetworks</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/machine-learning.html\">machine learning</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-05\"><a href=\"archive/2023/07/05.html\" title=\"Regex engine internals, Linux Commands, and The Basic Flake\">Wed 05 Jul 2023</a></time>\n<article>\n<h2 id=\"regex-engine-internals-as-a-library\"><a href=\"https://plurrrr.com/archive/2023/07/05.html#regex-engine-internals-as-a-library\">Regex engine internals as a library</a></h2>\n<blockquote>\n<p>Over the last several years, I’ve rewritten <a href=\"https://github.com/rust-lang/regex/\">Rust’s <code>regex</code>\ncrate</a> to enable better\ninternal composition, and to make it easier to add optimizations\nwhile maintaining correctness. In the course of this rewrite I\ncreated a new crate,\n<a href=\"https://github.com/rust-lang/regex/tree/master/regex-automata\"><code>regex-automata</code></a>,\nwhich exposes much of the regex crate internals as their own APIs\nfor others to use. To my knowledge, this is the first regex library\nto expose its internals to the degree done in <code>regex-automata</code> as a\nseparately versioned library.</p>\n<p>This blog post discusses the problems that led to the rewrite, how\nthe rewrite solved them and a guided tour of <code>regex-automata</code>’s API.</p>\n</blockquote>\n<p>Source: <a href=\"https://blog.burntsushi.net/regex-internals/\">Regex engine internals as a\nlibrary</a>, an article by\nAndrew Gallant.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/rust.html\">rust</a></li></ul>\n</article>\n<article>\n<h2 id=\"mastering-intermediate-linux-commands-for-server-management\"><a href=\"https://plurrrr.com/archive/2023/07/05.html#mastering-intermediate-linux-commands-for-server-management\">Mastering Intermediate Linux Commands for Server Management</a></h2>\n<blockquote>\n<p>As a sysadmin, you often come across complex tasks that require more\nthan just basic commands. That’s why it’s important to learn some\nintermediate-level Linux commands that can make your work easier and\nmore efficient.</p>\n<p>These commands can help you automate repetitive tasks, manage\nprocesses, and monitor system performance, among other things. In\nthis article, we will explore some of these commands and their\nusage.</p>\n</blockquote>\n<p>Source: <a href=\"https://akashrajpurohit.com/blog/mastering-intermediate-linux-commands-for-efficient-server-management/\">Mastering Intermediate Linux Commands for Efficient Server\nManagement</a>,\nan article by Akash Rajpurohit.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/command-line.html\">command line</a></li></ul>\n</article>\n<article>\n<h2 id=\"demystifying-nixos:-the-basic-flake\"><a href=\"https://plurrrr.com/archive/2023/07/05.html#demystifying-nixos:-the-basic-flake\">Demystifying NixOS: The Basic Flake</a></h2>\n<blockquote>\n<p>In this opinionated series, my aim is to provide a structured path\nthat takes you from a simple NixOS configuration to a more complex\none, while explaining the underlying concepts along the way.</p>\n</blockquote>\n<p>Source: <a href=\"https://lhf.pt/posts/demystifying-nixos-basic-flake/\">Demystifying NixOS: The Basic\nFlake</a>, an\narticle by Luís Humberto Fonseca.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nix.html\">nix</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-04\"><a href=\"archive/2023/07/04.html\" title=\"Generated Tests, Turbo-Charge tox, and Using git mailmap\">Tue 04 Jul 2023</a></time>\n<article>\n<h2 id=\"most-tests-should-be-generated\"><a href=\"https://plurrrr.com/archive/2023/07/04.html#most-tests-should-be-generated\">Most Tests Should Be Generated</a></h2>\n<blockquote>\n<p>Traditional testing wisdom eventually invokes the test pyramid,\nwhich is a guide to the proportion of tests to write along the\nisolation / integration spectrum. There’s an eternal debate about\nwhat the best proportion should be at each level, but interestingly\nit’s always presented with the assumption that test cases are\nhand-written. We should also think about test generation as a\ndimension, and if I were to draw a pyramid about it I’d place\ngenerated tests on the bottom and hand-written scenarios on top,\ni.e. most tests should be generated.</p>\n</blockquote>\n<p>Source: <a href=\"https://concerningquality.com/generated-tests/\">Most Tests Should Be\nGenerated</a>, an article\nby Alex Weisberger.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/testing.html\">testing</a></li></ul>\n</article>\n<article>\n<h2 id=\"two-ways-to-turbo-charge-tox\"><a href=\"https://plurrrr.com/archive/2023/07/04.html#two-ways-to-turbo-charge-tox\">Two Ways to Turbo-Charge tox</a></h2>\n<blockquote>\n<p>The traditional way to speed up <em>tox</em> runs is running it as <code>tox run-parallel</code> (née <code>tox --parallel</code> or just <code>tox -p</code>). And while\nit’s <a href=\"https://github.com/tox-dev/tox/issues/2844\">currently broken in <em>tox</em>\n4</a> for some users (yours\ntruly included), it’s a great feature that Nox is sorely lacking.</p>\n<p>But there are more ways, and I’d like to share two of them with\nyou. Both methods don’t make much difference in CIs like GitHub\nActions (just like <code>tox run-parallel</code>, mind you!), but they can do\nwonders for your local development. Which is where I have the least\npatience, so let’s dive right in!</p>\n</blockquote>\n<p>Source: <a href=\"https://hynek.me/articles/turbo-charge-tox/\">Two Ways to Turbo-Charge\ntox</a>, an article by Hynek\nSchlawack.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"using-git-mailmap-when-names-change\"><a href=\"https://plurrrr.com/archive/2023/07/04.html#using-git-mailmap-when-names-change\">Using git mailmap when names change</a></h2>\n<blockquote>\n<p>People change their names for all sorts of reasons. They get\nmarried, they transition, or they just decide a different name\nbetter suits them. When this happens, things break. Recently I\ntalked about how <a href=\"https://ntietz.com/blog/email-address-not-identifier/\">email address changes break\nthings</a>. Today\nit's how to fix this issue with git.</p>\n</blockquote>\n<p>Source: <a href=\"https://ntietz.com/blog/git-mailmap-for-name-changes/\">Using git mailmap when names change (or you mess up your\nemail)</a>, an\narticle by Nicole Tietz-Sokolskaya.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/git.html\">git</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-03\"><a href=\"archive/2023/07/03.html\" title=\"Short Names, Demystifying Pratt Parsers, and async/await in Rust\">Mon 03 Jul 2023</a></time>\n<article>\n<h2 id=\"names-should-be-as-short-as-possible-while-still-being-clear\"><a href=\"https://plurrrr.com/archive/2023/07/03.html#names-should-be-as-short-as-possible-while-still-being-clear\">Names should be as short as possible while still being clear</a></h2>\n<blockquote>\n<p>This mini-article is based on <a href=\"https://benhoyt.com/writings/python-api-design/#naming\">part of a\ntalk</a> I gave\nabout Python API design, but I think the main point holds across\nprogramming languages.</p>\n</blockquote>\n<p>Source: <a href=\"https://benhoyt.com/writings/short-names/\">Names should be as short as possible while still being\nclear</a>, an article by Ben\nHoyt.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/software-development.html\">software development</a></li><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"demystifying-pratt-parsers\"><a href=\"https://plurrrr.com/archive/2023/07/03.html#demystifying-pratt-parsers\">Demystifying Pratt Parsers</a></h2>\n<blockquote>\n<p>Pratt parsers are a beautiful way of solving the operator precedence problem:</p>\n<p>How can an expression like <code>1+2-3*4+5/6^7-8*9</code> be parsed to meet the\nexpectations of your\n<a href=\"https://en.wikipedia.org/wiki/Order_of_operations#Mnemonics\">PEMDAS</a>-trained\nbrain? Where do you put the parentheses? <em>What goes first?</em></p>\n</blockquote>\n<p>Source: <a href=\"https://martin.janiczek.cz/2023/07/03/demystifying-pratt-parsers.html\">Demystifying Pratt\nParsers</a>,\nan article by Martin Janiczek.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/parsing.html\">parsing</a></li></ul>\n</article>\n<article>\n<h2 id=\"how-to-think-about-async/await-in-rust\"><a href=\"https://plurrrr.com/archive/2023/07/03.html#how-to-think-about-async/await-in-rust\">How to think about <code>async</code>/<code>await</code> in Rust</a></h2>\n<blockquote>\n<p>Some documentation of Rust <code>async</code> and <code>await</code> has presented it as a\nseamless alternative to threads. Just sprinkle these keywords\nthrough your code and get concurrency that scales better! I think\nthis is very misleading. An <code>async fn</code> is a different thing from a\nnormal Rust <code>fn</code>, and you need to think about different things to\nwrite correct code in each case.</p>\n<p>This post presents a different way of looking at <code>async</code> that I\nthink is more useful, and less likely to lead to\ncancellation-related bugs.</p>\n</blockquote>\n<p>Source: <a href=\"http://cliffle.com/blog/async-inversion/\">How to think about <code>async</code>/<code>await</code> in\nRust</a>, an article by Cliff\nL. Biffle.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/rust.html\">rust</a></li></ul>\n</article>\n<article>\n<h2 id=\"joins-13-ways\"><a href=\"https://plurrrr.com/archive/2023/07/03.html#joins-13-ways\">Joins 13 Ways</a></h2>\n<blockquote>\n<p>Relational (inner) joins are really common in the world of\ndatabases, and one weird thing about them is that it seems like\neveryone has a different idea of what they are. In this post I’ve\naggregated a bunch of different definitions, ways of thinking about\nthem, and ways of implementing them that will hopefully be\ninteresting. They’re not without redundancy, some of them are\narguably the same, but I think they’re all interesting perspectives\nnonetheless.</p>\n</blockquote>\n<p>Source: <a href=\"https://justinjaffray.com/joins-13-ways/\">Joins 13 Ways</a>, an\narticle by Justin Jaffray.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/database.html\">database</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-02\"><a href=\"archive/2023/07/02.html\" title=\"You Don’t Need __all__, Structured Concurrency, and Twain framework\">Sun 02 Jul 2023</a></time>\n<article>\n<h2 id=\"you-don’t-need-__all__\"><a href=\"https://plurrrr.com/archive/2023/07/02.html#you-don%E2%80%99t-need-__all__\">You Don’t Need <code>__all__</code></a></h2>\n<blockquote>\n<p>Every now and then, I get a PR from a well-meaning contributor\ntrying to add <code>__all__</code> to a Python module for whatever reason. I\nalways decline these, they are unnecessary (at least for the way I\nstructure my code) and I thought I’d write a short post explaining\nwhy.</p>\n</blockquote>\n<p>Source: <a href=\"https://jamesturk.net/posts/you-dont-need-all/\">You Don’t Need\n<strong>all</strong></a>, an article\nby James Turk.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"tree-structured-concurrency\"><a href=\"https://plurrrr.com/archive/2023/07/02.html#tree-structured-concurrency\">Tree-Structured Concurrency</a></h2>\n<blockquote>\n<p>In this post I want to provide you with a practical introduction to\nstructured concurrency. I will do my best to explain what it is, why\nit's relevant, and how you can start applying it to your rust\nprojects today. Structured concurrency is a lens I use in almost all\nof my reasoning about async Rust, and I think it might help others\ntoo.</p>\n</blockquote>\n<p>Source: <a href=\"https://blog.yoshuawuyts.com/tree-structured-concurrency/\">Tree-Structured\nConcurrency</a>,\nan article by Yoshua Wuyts.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/rust.html\">rust</a></li></ul>\n</article>\n<article>\n<h2 id=\"why-i-use-the-twain-web-framework\"><a href=\"https://plurrrr.com/archive/2023/07/02.html#why-i-use-the-twain-web-framework\">Why I use the Twain web framework</a></h2>\n<blockquote>\n<p>Recently I've been using Twain for all of my newer web apps instead\nof Scotty and previously Spock, and I wanted to share why.</p>\n</blockquote>\n<p>Source: <a href=\"https://gilmi.me/blog/post/2023/07/01/why-i-use-twain\">Why I use the Twain web\nframework</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/haskell.html\">haskell</a></li></ul>\n</article>\n<article>\n<h2 id=\"cause-of-death\"><a href=\"https://plurrrr.com/archive/2023/07/02.html#cause-of-death\">Cause of Death</a></h2>\n<blockquote>\n<p>On a quiet day, away from the hustle of Richmond, in a small cottage\non the Virginia coast, Dr. Kay Scarpetta receives a disturbing phone\ncall from the Chesapeake police. Thirty feet deep in the murky\nwaters of Virginia's Elizabeth River, a scuba diver's body is\ndiscovered near the Inactive Naval Shipyard.As the police begin\nsearching for clues, the wallet of investigative reporter Ted\nEddings is found.</p>\n<p>Unnerved by the possible identity of the victim, Scarpetta orders\nthe crime scene roped off and left alone until she arrives. What was\nhe doing there, searching for Civil War relics as the officer\nsuggested, or was there a bigger story? As she rifles through the\nmultitude of clues, a second murder hits much closer to home. This\nnew development puts Scarpetta and her colleagues hot on the trail\nof a military conspiracy.</p>\n</blockquote>\n<p>In the evening I started in <a href=\"https://www.amazon.com/Cause-Death-Scarpetta-Book-Kay-ebook/dp/B000QFCFI4\">Cause of\nDeath</a>,\nKay Scarpetta book 7 by Patricia Cornwell.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/crime-fiction.html\">crime fiction</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-07-01\"><a href=\"archive/2023/07/01.html\" title=\"From Potter&#x27;s Field: Good, git workflow, and Go container with Nix\">Sat 01 Jul 2023</a></time>\n<article>\n<h2 id=\"from-potter&#x27;s-field:-good\"><a href=\"https://plurrrr.com/archive/2023/07/01.html#from-potter's-field:-good\">From Potter's Field: Good</a></h2>\n<p>In the afternoon I finished <a href=\"https://www.amazon.com/Potters-Field-Scarpetta-Kay-ebook/dp/B001D202NO\">From Potter's\nField</a>,\nKay Scarpetta book 6 by Patricia Cornwell. I liked the story.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/book.html\">book</a></li><li><a href=\"https://plurrrr.com/tags/2023/crime-fiction.html\">crime fiction</a></li></ul>\n</article>\n<article>\n<h2 id=\"my-git-worfklow\"><a href=\"https://plurrrr.com/archive/2023/07/01.html#my-git-worfklow\">My git worfklow</a></h2>\n<blockquote>\n<p>Every now and then, at work, I find myself discussing git worfklows,\ncommit messages, branching, releasing, versioning, changelogs\netc. Since my opinion has remained fairly consistent for the past\nfew years, I found myself repeating the same points a lot, so I\nwrote it down. This page is the resulting compilation of my opinions\non the software development lifecycle (SDLC), without\nworkplace-specific tangeants.</p>\n</blockquote>\n<p>Source: <a href=\"https://jiby.tech/post/my-git-worfklow/\">My git worfklow</a>, an\narticle by Jean-Baptiste Doyon.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/git.html\">git</a></li></ul>\n</article>\n<article>\n<h2 id=\"adventures-in-building-a-go-container-with-nix\"><a href=\"https://plurrrr.com/archive/2023/07/01.html#adventures-in-building-a-go-container-with-nix\">Adventures in building a Go container with Nix</a></h2>\n<blockquote>\n<p>I’d like to preface this article by saying that it is not an\nauthoritative guide, rather it is just me documenting my experience\nfiguring various things out, in the hope that it’ll be useful or\ninteresting to someone else. I assume some knowledge of Nix and\ncontainerization throughout this article.</p>\n</blockquote>\n<p>Source: <a href=\"https://jameswillia.ms/posts/go-nix-containers.html\">Adventures in building a Go container with\nNix</a>, an article\nby James Williams.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nix.html\">nix</a></li><li><a href=\"https://plurrrr.com/tags/2023/go.html\">go</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-30\"><a href=\"archive/2023/06/30.html\" title=\"File structure != API, what attracts ticks, and The Python GIL\">Fri 30 Jun 2023</a></time>\n<article>\n<h2 id=\"for-python-packages,-file-structure-!=-api\"><a href=\"https://plurrrr.com/archive/2023/06/30.html#for-python-packages,-file-structure-!=-api\">For Python packages, file structure != API</a></h2>\n<blockquote>\n<p>When you’re creating a Python package, one of the nice things is\nthat you can just add a .py source file to the package directory,\nand then users can import it right away.</p>\n</blockquote>\n<p>Source: <a href=\"https://benhoyt.com/writings/python-api-file-structure/\">For Python packages, file structure !=\nAPI</a>, an\narticle by Ben Hoyt.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"static-electricity-attracts-ticks-to-hosts\"><a href=\"https://plurrrr.com/archive/2023/06/30.html#static-electricity-attracts-ticks-to-hosts\">Static electricity attracts ticks to hosts</a></h2>\n<blockquote>\n<p>Ticks can be attracted across air gaps several times larger than\nthemselves by the static electricity that their hosts naturally\naccumulate, researchers at the University of Bristol have\ndiscovered.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.bristol.ac.uk/news/2023/june/static-electricity-attracts-ticks-to-hosts.html\">Static electricity attracts ticks to\nhosts</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nature.html\">nature</a></li></ul>\n</article>\n<article>\n<h2 id=\"the-python-gil:-past,-present,-and-future\"><a href=\"https://plurrrr.com/archive/2023/06/30.html#the-python-gil:-past,-present,-and-future\">The Python GIL: Past, Present, and Future</a></h2>\n<blockquote>\n<p>Our team had some fun experimenting with Python 3.9-nogil, the\nresults of which will be reported in an upcoming blog post. In the\nmeantime, we saw an opportunity to dive deeper into the history of\nthe global interpreter lock (GIL), including why it makes Python so\neasy to integrate with and the tradeoff between ease and\nperformance.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.backblaze.com/blog/the-python-gil-past-present-and-future/\">What Is the Python GIL and Will They Get Rid of\nIt?</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"automating-command-execution-across-all-tmux-panes\"><a href=\"https://plurrrr.com/archive/2023/06/30.html#automating-command-execution-across-all-tmux-panes\">Automating Command Execution Across All Tmux Panes</a></h2>\n<blockquote>\n<p>As developers, we often find ourselves working in multiple tmux\npanes, each running different applications or instances of the same\napplication. When we make changes to a configuration file, such as\n<code>~/.vimrc</code> for Vim or <code>~/.aliases</code> for our shell, we need to\nmanually reload that configuration in each relevant instance. This\ncan be a time-consuming process, especially when working with a\nlarge number of panes. But also, let's be wizards and automate this\nprocess!</p>\n<p>In this post, we'll explore a simple automation that can save you a\nlot of time and effort. We'll focus on a specific use case —\nreloading a <code>.vimrc</code> file across all Vim instances in tmux panes —\nbut the pattern can be applied to a variety of scenarios.</p>\n</blockquote>\n<p>Source: <a href=\"https://leblancfg.com/automating-command-execution-across-tmux-panes.html\">TIL: Automating Command Execution Across All Tmux\nPanes</a>,\nan article by François Leblanc.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/tmux.html\">tmux</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-29\"><a href=\"archive/2023/06/29.html\" title=\"NixOS, hidden CLI tools, and Practical Procedural Macros\">Thu 29 Jun 2023</a></time>\n<article>\n<h2 id=\"nixos-and-my-descent-into-insanity\"><a href=\"https://plurrrr.com/archive/2023/06/29.html#nixos-and-my-descent-into-insanity\">NixOS and my Descent into Insanity</a></h2>\n<blockquote>\n<p>As I tend to do, I picked a topic to write about that is much larger\nin scope than I could manage in a reasonable amount of time. Did I\nlearn? Apparently not. This article started off with switching from\n<a href=\"https://www.zsh.org/\"><strong>zsh</strong></a> to\n<a href=\"https://fishshell.com/\"><strong>fish</strong></a>. Then I thought, &quot;Might as well\nmanage it all with Nix!&quot;, which led me to switch to <a href=\"https://github.com/nix-community/home-manager\"><strong>home\nmanager</strong></a> to manage\nmy dotfiles which led me to using Nix everywhere I possibly could.</p>\n<p>As expected, using Nix where it's not supported caused some\nissues. Buckle up, and watch my slow descent into madness (Nix).</p>\n</blockquote>\n<p>Source: <a href=\"https://ersei.net/en/blog/its-nixin-time\">NixOS and my Descent into\nInsanity</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/nix.html\">nix</a></li></ul>\n</article>\n<article>\n<h2 id=\"cli-tools-hidden-in-the-python-standard-library\"><a href=\"https://plurrrr.com/archive/2023/06/29.html#cli-tools-hidden-in-the-python-standard-library\">CLI tools hidden in the Python standard library</a></h2>\n<p><a href=\"https://til.simonwillison.net/python/stdlib-cli-tools\">CLI tools hidden in the Python standard\nlibrary</a> in\nwhich Simon Willison wonders what little tools are lurking in the\nPython standard library, available on any computer with a working\nPython installation?</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li><li><a href=\"https://plurrrr.com/tags/2023/command-line.html\">command line</a></li></ul>\n</article>\n<article>\n<h2 id=\"practical-procedural-macros\"><a href=\"https://plurrrr.com/archive/2023/06/29.html#practical-procedural-macros\">Practical Procedural Macros</a></h2>\n<blockquote>\n<p>An explaination of how to implement practical procedural macros in\nthe <a href=\"https://www.rust-lang.org/\">Rust</a> programming\nlanguage. Explains the different types of macros, then shows an\nimplementation of a procedural macro following best practices,\nfocusing on testing and ergonomics. <em>Assumes some familiarity with\nRust</em>.</p>\n</blockquote>\n<p>Source: <a href=\"https://xy2.dev/blog/simple-proc-macro/\">Practical Procedural\nMacros</a>, an article by Hugo\nElhaj-Lahsen.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/rust.html\">rust</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-28\"><a href=\"archive/2023/06/28.html\" title=\"5 Rust Insights, FreeBSD Jails Containers, and ORM an anti pattern?\">Wed 28 Jun 2023</a></time>\n<article>\n<h2 id=\"rust-fact-vs.-fiction:-5-insights-from-google&#x27;s-rust-journey\"><a href=\"https://plurrrr.com/archive/2023/06/28.html#rust-fact-vs.-fiction:-5-insights-from-google's-rust-journey\">Rust fact vs. fiction: 5 Insights from Google's Rust journey</a></h2>\n<blockquote>\n<p>In this post, we will analyze some data covering years of early\nadoption of Rust here at Google. At Google, we have been seeing\nincreased <a href=\"https://opensource.googleblog.com/2021/02/google-joins-rust-foundation.html\"><strong>Rust\nadoption</strong></a>,\nespecially in our consumer applications and platforms. Pulling from\nthe <strong>over 1,000 Google developers</strong> who have authored and committed\nRust code as some part of their work in 2022, we’ll address some\nrumors head-on, both confirming some issues that could be improved\nand sharing some enlightening discoveries we have made along the\nway.</p>\n</blockquote>\n<p>Source: <a href=\"https://opensource.googleblog.com/2023/06/rust-fact-vs-fiction-5-insights-from-googles-rust-journey-2022.html\">Rust fact vs. fiction: 5 Insights from Google's Rust journey\nin\n2022</a>,\nan article by Lars Bergstrom and Kathy Brennan.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/rust.html\">rust</a></li></ul>\n</article>\n<article>\n<h2 id=\"freebsd-jails-containers\"><a href=\"https://plurrrr.com/archive/2023/06/28.html#freebsd-jails-containers\">FreeBSD Jails Containers</a></h2>\n<blockquote>\n<p>FreeBSD networking and containers (Jails) stacks are very mature and\nprovide lots of useful features … yet for some reason these features\nare not properly advertised by the FreeBSD project … or not even\ndocumented at all.</p>\n</blockquote>\n<p>Source: <a href=\"https://vermaden.wordpress.com/2023/06/28/freebsd-jails-containers/\">FreeBSD Jails\nContainers</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/bsd.html\">bsd</a></li><li><a href=\"https://plurrrr.com/tags/2023/jail.html\">jail</a></li></ul>\n</article>\n<article>\n<h2 id=\"is-orm-still-an-&#x27;anti-pattern&#x27;?\"><a href=\"https://plurrrr.com/archive/2023/06/28.html#is-orm-still-an-'anti-pattern'?\">Is ORM still an 'anti pattern'?</a></h2>\n<blockquote>\n<p>ORMs are one of those things that software writers like to pick\non. There are many online articles that go by the same tune: “ORMs\nare an anti-pattern. They are a toy for startups, but eventually\nhurt more than help.”</p>\n<p>This is an exaggeration. ORMs aren’t bad. Are they perfect?\nDefinitely not, just like anything else in software. At the same\ntime, the criticisms are expected—two years ago, I would’ve agreed\nwith that stereotyped headline wholeheartedly. I’ve had my share of\n“What do you mean the ORM ran the server out of memory?” incidents.</p>\n<p>But in reality, ORMs are more misused than overused.</p>\n</blockquote>\n<p><a href=\"https://github.com/getlago/lago/wiki/Is-ORM-still-an-\">Is ORM still an 'anti\npattern'?</a>, an\narticle by Anh-Tho Chuong.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/database.html\">database</a></li></ul>\n</article>\n<article>\n<h2 id=\"when-numpy-is-too-slow\"><a href=\"https://plurrrr.com/archive/2023/06/28.html#when-numpy-is-too-slow\">When NumPy is too slow</a></h2>\n<blockquote>\n<p>If you’re doing numeric calculations, NumPy is a lot faster than\nthan plain Python—but sometimes that’s not enough. What should you\ndo when your NumPy-based code is too slow?</p>\n<p>Your first thought might be parallelism, but that should probably be\nthe last thing you consider. There are many speedups you can do\nbefore parallelism becomes helpful, from algorithmic improvements to\nworking around NumPy’s architectural limitations.</p>\n<p>Let’s see why NumPy can be slow, and then some solutions to help\nspeed up your code even more.</p>\n</blockquote>\n<p>Source: <a href=\"https://pythonspeed.com/articles/numpy-is-slow/\">When NumPy is too\nslow</a>, an article by\nItamar Turner-Trauring.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-27\"><a href=\"archive/2023/06/27.html\" title=\"Authlib, self-supervised learning, and Codon\">Tue 27 Jun 2023</a></time>\n<article>\n<h2 id=\"authlib:-python-authentication\"><a href=\"https://plurrrr.com/archive/2023/06/27.html#authlib:-python-authentication\">Authlib: Python Authentication</a></h2>\n<blockquote>\n<p>The ultimate Python library in building OAuth and OpenID Connect\nservers. It is designed from low level specifications\nimplementations to high level frameworks integrations, to meet the\nneeds of everyone.</p>\n</blockquote>\n<p>Source: <a href=\"https://docs.authlib.org/en/latest/\">Authlib 1.2.1\ndocumentation</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"the-self-supervised-learning-cookbook\"><a href=\"https://plurrrr.com/archive/2023/06/27.html#the-self-supervised-learning-cookbook\">The self-supervised learning cookbook</a></h2>\n<blockquote>\n<p>We have released a new &quot;<a href=\"https://arxiv.org/abs/2304.12210/\">Cookbook of Self-Supervised\nLearning</a>,” a practical guide for\nAI researchers and practitioners on how to navigate SSL recipes,\nunderstand its various knobs and levers, and gain the know-how\nneeded to experiment with SSL's untapped flavors. This is part of\nour efforts to lower the barrier and help democratize access to SSL\nresearch. You’ll also find tips and tricks from more than a dozen\nauthors across multiple universities, including New York University,\nUniversity of Maryland, UC Davis, University of Montreal; as well as\nleading Meta AI researchers, such as Yann LeCun.</p>\n</blockquote>\n<p>Source: <a href=\"https://ai.meta.com/blog/self-supervised-learning-practical-guide/\">The Self-Supervised Learning\nCookbook</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/machine-learning.html\">machine learning</a></li></ul>\n</article>\n<article>\n<h2 id=\"welcome-to-codon\"><a href=\"https://plurrrr.com/archive/2023/06/27.html#welcome-to-codon\">Welcome to Codon</a></h2>\n<blockquote>\n<p>Codon is a high-performance Python compiler that compiles Python\ncode to native machine code without any runtime overhead. Typical\nspeedups over Python are on the order of 100x or more, on a single\nthread. Codon supports native multithreading which can lead to\nspeedups many times higher still.</p>\n<p>The Codon framework is fully modular and extensible, allowing for\nthe seamless integration of new modules, compiler optimizations,\ndomain-specific languages and so on. We actively develop Codon\nextensions for a number of domains such as bioinformatics and\nquantitative finance.</p>\n</blockquote>\n<p>Source: <a href=\"https://docs.exaloop.io/codon/\">Welcome to Codon</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/python.html\">python</a></li></ul>\n</article>\n<article>\n<h2 id=\"advanced-macos-command-line-tools\"><a href=\"https://plurrrr.com/archive/2023/06/27.html#advanced-macos-command-line-tools\">Advanced macOS Command-Line Tools</a></h2>\n<blockquote>\n<p>macOS is fortunate to have access to the huge arsenal of standard\nUnix tools. There are also a good number of macOS-specific\ncommand-line utilities that provide unique macOS functionality. To\nview the full documentation for any of these commands, run <code>man &lt;command&gt;</code>.</p>\n</blockquote>\n<p>Source: <a href=\"https://saurabhs.org/advanced-macos-commands\">Advanced macOS Commands</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/macos.html\">macos</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-26\"><a href=\"archive/2023/06/26.html\" title=\"From Potter&#x27;s Field, Parser Combinators, and Which flow is better\">Mon 26 Jun 2023</a></time>\n<article>\n<h2 id=\"from-potter&#x27;s-field\"><a href=\"https://plurrrr.com/archive/2023/06/26.html#from-potter's-field\">From Potter's Field</a></h2>\n<blockquote>\n<p>An unidentified nude female sits propped against a fountain in\nCentral Park. There are no signs of struggle. When Dr. Kay Scarpetta\nand her colleagues Benton Wesley and Pete Marino arrive on the\nscene, they instantly recognize the signature of serial killer\nTemple Brooks Gault. Scarpetta, on assignment with the FBI, visits\nthe New York City morgue on Christmas morning, where she must use\nher forensic expertise to give a name to the nameless—a difficult\ntask. But as she sorts through conflicting forensic clues, Gault\nclaims his next victim. He has infiltrated the FBI’s top secret\nartificial-intelligence system developed by Scarpetta’s niece, and\nsends taunting messages as his butchery continues, moving\nterrifyingly closer to Scarpetta herself.</p>\n</blockquote>\n<p>In the afternoon I started in <a href=\"https://www.amazon.com/Potters-Field-Scarpetta-Kay-ebook/dp/B001D202NO\">From Potter's\nField</a>,\nKay Scarpetta book 6 by Patricia Cornwell.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/book.html\">book</a></li><li><a href=\"https://plurrrr.com/tags/2023/crime-fiction.html\">crime fiction</a></li></ul>\n</article>\n<article>\n<h2 id=\"an-introduction-to-parser-combinators\"><a href=\"https://plurrrr.com/archive/2023/06/26.html#an-introduction-to-parser-combinators\">An Introduction to Parser Combinators</a></h2>\n<blockquote>\n<p>If you’ve ever had to write a parser before, you know that creating\nparsers can be a tedious and complicated process. The good news is\nthat it doesn’t have to be this way. In this post, I’m going to\nintroduce <strong>parser combinators</strong> - a technique for building parsers\nthat I’ve found to be both practical and fun to play around\nwith<sup><a href=\"https://blog.varunramesh.net/posts/intro-parser-combinators/#fn1\">1</a></sup>.</p>\n</blockquote>\n<p>Source: <a href=\"https://blog.varunramesh.net/posts/intro-parser-combinators/\">An Introduction to Parser\nCombinators</a>,\nan article by Varun Ramesh.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/parsing.html\">parsing</a></li></ul>\n</article>\n<article>\n<h2 id=\"gitflow-and-github-flow-compared:-which-one-is-better?\"><a href=\"https://plurrrr.com/archive/2023/06/26.html#gitflow-and-github-flow-compared:-which-one-is-better?\">Gitflow and GitHub Flow compared: Which one is better?</a></h2>\n<blockquote>\n<p>Gitflow is, by far, the most popular branching model and possibly\nthe one that has endured the test of time the most. Introduced by\n<a href=\"https://nvie.com/posts/a-successful-git-branching-model/\"><strong>Vincent Driessen in\n2010</strong></a>,\nits fundamental idea is that you should isolate your work into\ndifferent types of git branches.</p>\n<p>Other branching strategies, such as the centralized workflow (for\nthose teams that come from SVN), and the forking workflow (for\nopen-source projects) exist. Git, as a version control system, only\ndetails basic branching operations, and it remains controversial as\nto which approach is the best. Beyond those basic branching\noperations, it's a matter of opinion.</p>\n</blockquote>\n<p>‍&gt; In this article we will compare Gitflow with its newer approach,</p>\n<blockquote>\n<p>GitHub Flow.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.watermelontools.com/post/gitflow-and-github-flow-compared-which-one-is-better\">Gitflow and GitHub Flow compared: Which one is better?</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/git.html\">git</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-25\"><a href=\"archive/2023/06/25.html\" title=\"Raku is pretty damn Cool, SKIP LOCKED, and purge files from git\">Sun 25 Jun 2023</a></time>\n<article>\n<h2 id=\"raku-is-pretty-damn-cool\"><a href=\"https://plurrrr.com/archive/2023/06/25.html#raku-is-pretty-damn-cool\">Raku is pretty damn Cool</a></h2>\n<blockquote>\n<p>The first time, I've heard of <a href=\"https://www.raku.org/\">Raku</a> was\nmaybe a year ago. I was too busy to look into it though. I've done\nthat now and BOY OH BOY, do I like this language.</p>\n</blockquote>\n<p>Source: <a href=\"https://felix-knorr.net/posts/2023-06-24-raku-is-awesome.html\">Raku is pretty damn\nCool</a>,\nan article by Felix Knorr.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/raku.html\">raku</a></li></ul>\n</article>\n<article>\n<h2 id=\"what-is-skip-locked-for-in-postgresql-9.5?\"><a href=\"https://plurrrr.com/archive/2023/06/25.html#what-is-skip-locked-for-in-postgresql-9.5?\">What is SKIP LOCKED for in PostgreSQL 9.5?</a></h2>\n<blockquote>\n<p>PostgreSQL 9.5 introduces a new SKIP LOCKED option to SELECT ... FOR\n[KEY] UPDATE|SHARE. It’s used in the same place as NOWAIT and, like\nNOWAIT, affects behaviour when the tuple is locked by another\ntransaction.</p>\n<p>The main utility of SKIP LOCKED is for building simple, reliable and\nefficient concurrent work queues.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.2ndquadrant.com/en/blog/what-is-select-skip-locked-for-in-postgresql-9-5/\">What is SKIP LOCKED for in PostgreSQL\n9.5?</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/postgres.html\">postgres</a></li></ul>\n</article>\n<article>\n<h2 id=\"completely-purge-files-from-a-git-repository\"><a href=\"https://plurrrr.com/archive/2023/06/25.html#completely-purge-files-from-a-git-repository\">Completely purge files from a git repository</a></h2>\n<blockquote>\n<p>I have occasionally ended up with files I did not want in my git\nrepositories. These can both take up a lot of space, and contain\nsensitive data that we just want to remove (such as MySQL dumps,\ndeploy keys etc).</p>\n<p>Git keeps a history of all files, so just deleting the file doesn’t\n“make it go away”. The only way to completely remove the file is to\nscan through all history, removing all references to (and history\nof) those files, and finally pruning the git repo (physically\nremoving references to what we just deleted). Finally you have to\nforce-push the repo changes back to the remote, overwriting the\nremote.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.axllent.org/docs/purge-files-from-git/\">Completely purge files from a git repository (including\nhistory)</a>, an\narticle by Ralph Slooten.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/git.html\">git</a></li></ul>\n</article>\n<time class=\"tl-date\" datetime=\"2023-06-24\"><a href=\"archive/2023/06/24.html\" title=\"The Body Farm: Good, CSS dark mode, and Big O Notation\">Sat 24 Jun 2023</a></time>\n<article>\n<h2 id=\"the-body-farm:-good\"><a href=\"https://plurrrr.com/archive/2023/06/24.html#the-body-farm:-good\">The Body Farm: Good</a></h2>\n<p>In the afternoon I finished <a href=\"https://www.amazon.com/Body-Farm-Scarpetta-Kay-ebook/dp/B0045UADFI\">The Body\nFarm</a>,\nKay Scarpetta book 5 by Patricia Cornwell. I liked the story.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/book.html\">book</a></li><li><a href=\"https://plurrrr.com/tags/2023/crime-fiction.html\">crime fiction</a></li></ul>\n</article>\n<article>\n<h2 id=\"css-only-dark-mode-without-js\"><a href=\"https://plurrrr.com/archive/2023/06/24.html#css-only-dark-mode-without-js\">CSS only dark mode without JS</a></h2>\n<blockquote>\n<p>Last week I implemented dark mode on my website, without using any\nJS and only modern CSS media queries.</p>\n</blockquote>\n<p>Source: <a href=\"https://simondalvai.org/blog/css-only-darkmode/\">CSS only dark mode without\nJS</a>, an article by\nSimon Dalvai.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/css.html\">css</a></li></ul>\n</article>\n<article>\n<h2 id=\"big-o-notation:-a-simple-explanation-with-examples\"><a href=\"https://plurrrr.com/archive/2023/06/24.html#big-o-notation:-a-simple-explanation-with-examples\">Big O Notation: A Simple Explanation With Examples</a></h2>\n<blockquote>\n<p>It’s hard to create efficient algorithms without understanding the\ntime and space complexity of various operations. The concept of Big\nO notation helps programmers understand how quickly or slowly an\nalgorithm will execute as the input size grows.</p>\n<p>In this article, we’ll cover the basics of Big O notation, why it is\nused and how describe the time and space complexity of algorithms\nwith example.</p>\n</blockquote>\n<p>Source: <a href=\"https://stackthrive.com/big-o-notation/\">Big O Notation: A Simple Explanation With\nExamples</a>.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/computer-science.html\">computer science</a></li></ul>\n</article>\n<article>\n<h2 id=\"clearing-up-some-misconceptions-about-passkeys\"><a href=\"https://plurrrr.com/archive/2023/06/24.html#clearing-up-some-misconceptions-about-passkeys\">Clearing up some misconceptions about Passkeys</a></h2>\n<blockquote>\n<p>I am <em>unreasonably</em> excited about\n<a href=\"https://developer.apple.com/passkeys/\">passkeys</a>, I’ve\n<a href=\"https://www.stavros.io/posts/authentication/\">long</a> been looking\nfor a better/more convenient way than passwords to do\nauthentication, and I think passkeys are finally it.</p>\n<p>However, whenever I see passkeys mentioned (for example on the\nrecent <a href=\"https://tailscale.com/blog/passkeys/\">Tailscale post</a> about\nthem), there are always a lot of misconceptions that surface in the\ndebate. I’d like to clear some of them here, and hopefully explain a\nbit better what passkeys are.</p>\n</blockquote>\n<p>Source: <a href=\"https://www.stavros.io/posts/clearing-up-some-passkeys-misconceptions/\">Clearing up some misconceptions about\nPasskeys</a>,\nan article by Stavros Korokithakis.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/security.html\">security</a></li></ul>\n</article>\n<article>\n<h2 id=\"the-bubble-(2022)\"><a href=\"https://plurrrr.com/archive/2023/06/24.html#the-bubble-(2022)\">The Bubble (2022)</a></h2>\n<blockquote>\n<p>A group of actors and actresses stuck inside a pandemic bubble at a\nhotel attempt to complete a film.</p>\n</blockquote>\n<p>In the evening Alice, Esme, and I watched <a href=\"https://www.imdb.com/title/tt13610562/\">The\nBubble</a>. I didn't like the\nmovie much and give it a 5 out of 10.</p>\n<ul class=\"tl-tags\"><li><a href=\"https://plurrrr.com/tags/2023/movie.html\">movie</a></li><li><a href=\"https://plurrrr.com/tags/2023/comedy.html\">comedy</a></li></ul>\n</article>\n      </main>\n      <nav class=\"tl-archive\">\n        <h2>Archive</h2>\n<dl>\n  <dt><a href=\"archive/2023/\">2023</a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"archive/2023/week/01.html\" title=\"week 01, 2023\">01</a></li>\n      <li><a href=\"archive/2023/week/02.html\" title=\"week 02, 2023\">02</a></li>\n      <li><a href=\"archive/2023/week/03.html\" title=\"week 03, 2023\">03</a></li>\n      <li><a href=\"archive/2023/week/04.html\" title=\"week 04, 2023\">04</a></li>\n      <li><a href=\"archive/2023/week/05.html\" title=\"week 05, 2023\">05</a></li>\n      <li><a href=\"archive/2023/week/06.html\" title=\"week 06, 2023\">06</a></li>\n      <li><a href=\"archive/2023/week/07.html\" title=\"week 07, 2023\">07</a></li>\n      <li><a href=\"archive/2023/week/08.html\" title=\"week 08, 2023\">08</a></li>\n      <li><a href=\"archive/2023/week/09.html\" title=\"week 09, 2023\">09</a></li>\n      <li><a href=\"archive/2023/week/10.html\" title=\"week 10, 2023\">10</a></li>\n      <li><a href=\"archive/2023/week/11.html\" title=\"week 11, 2023\">11</a></li>\n      <li><a href=\"archive/2023/week/12.html\" title=\"week 12, 2023\">12</a></li>\n      <li><a href=\"archive/2023/week/13.html\" title=\"week 13, 2023\">13</a></li>\n      <li><a href=\"archive/2023/week/14.html\" title=\"week 14, 2023\">14</a></li>\n      <li><a href=\"archive/2023/week/15.html\" title=\"week 15, 2023\">15</a></li>\n      <li><a href=\"archive/2023/week/16.html\" title=\"week 16, 2023\">16</a></li>\n      <li><a href=\"archive/2023/week/17.html\" title=\"week 17, 2023\">17</a></li>\n      <li><a href=\"archive/2023/week/18.html\" title=\"week 18, 2023\">18</a></li>\n      <li><a href=\"archive/2023/week/19.html\" title=\"week 19, 2023\">19</a></li>\n      <li><a href=\"archive/2023/week/20.html\" title=\"week 20, 2023\">20</a></li>\n      <li><a href=\"archive/2023/week/21.html\" title=\"week 21, 2023\">21</a></li>\n      <li><a href=\"archive/2023/week/22.html\" title=\"week 22, 2023\">22</a></li>\n      <li><a href=\"archive/2023/week/23.html\" title=\"week 23, 2023\">23</a></li>\n      <li><a href=\"archive/2023/week/24.html\" title=\"week 24, 2023\">24</a></li>\n      <li><a href=\"archive/2023/week/25.html\" title=\"week 25, 2023\">25</a></li>\n      <li><a href=\"archive/2023/week/26.html\" title=\"week 26, 2023\">26</a></li>\n      <li><a href=\"archive/2023/week/27.html\" title=\"week 27, 2023\">27</a></li>\n    </ul>\n  </dd>\n  <dt><a href=\"archive/2022/\">2022</a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"archive/2022/week/01.html\" title=\"week 01, 2022\">01</a></li>\n      <li><a href=\"archive/2022/week/02.html\" title=\"week 02, 2022\">02</a></li>\n      <li><a href=\"archive/2022/week/03.html\" title=\"week 03, 2022\">03</a></li>\n      <li><a href=\"archive/2022/week/04.html\" title=\"week 04, 2022\">04</a></li>\n      <li><a href=\"archive/2022/week/05.html\" title=\"week 05, 2022\">05</a></li>\n      <li><a href=\"archive/2022/week/06.html\" title=\"week 06, 2022\">06</a></li>\n      <li><a href=\"archive/2022/week/07.html\" title=\"week 07, 2022\">07</a></li>\n      <li><a href=\"archive/2022/week/08.html\" title=\"week 08, 2022\">08</a></li>\n      <li><a href=\"archive/2022/week/09.html\" title=\"week 09, 2022\">09</a></li>\n      <li><a href=\"archive/2022/week/10.html\" title=\"week 10, 2022\">10</a></li>\n      <li><a href=\"archive/2022/week/11.html\" title=\"week 11, 2022\">11</a></li>\n      <li><a href=\"archive/2022/week/12.html\" title=\"week 12, 2022\">12</a></li>\n      <li><a href=\"archive/2022/week/13.html\" title=\"week 13, 2022\">13</a></li>\n      <li><a href=\"archive/2022/week/14.html\" title=\"week 14, 2022\">14</a></li>\n      <li><a href=\"archive/2022/week/15.html\" title=\"week 15, 2022\">15</a></li>\n      <li><a href=\"archive/2022/week/16.html\" title=\"week 16, 2022\">16</a></li>\n      <li><a href=\"archive/2022/week/17.html\" title=\"week 17, 2022\">17</a></li>\n      <li><a href=\"archive/2022/week/18.html\" title=\"week 18, 2022\">18</a></li>\n      <li><a href=\"archive/2022/week/19.html\" title=\"week 19, 2022\">19</a></li>\n      <li><a href=\"archive/2022/week/20.html\" title=\"week 20, 2022\">20</a></li>\n      <li><a href=\"archive/2022/week/21.html\" title=\"week 21, 2022\">21</a></li>\n      <li><a href=\"archive/2022/week/22.html\" title=\"week 22, 2022\">22</a></li>\n      <li><a href=\"archive/2022/week/23.html\" title=\"week 23, 2022\">23</a></li>\n      <li><a href=\"archive/2022/week/24.html\" title=\"week 24, 2022\">24</a></li>\n      <li><a href=\"archive/2022/week/25.html\" title=\"week 25, 2022\">25</a></li>\n      <li><a href=\"archive/2022/week/26.html\" title=\"week 26, 2022\">26</a></li>\n      <li><a href=\"archive/2022/week/27.html\" title=\"week 27, 2022\">27</a></li>\n      <li><a href=\"archive/2022/week/28.html\" title=\"week 28, 2022\">28</a></li>\n      <li><a href=\"archive/2022/week/29.html\" title=\"week 29, 2022\">29</a></li>\n      <li><a href=\"archive/2022/week/30.html\" title=\"week 30, 2022\">30</a></li>\n      <li><a href=\"archive/2022/week/31.html\" title=\"week 31, 2022\">31</a></li>\n      <li><a href=\"archive/2022/week/32.html\" title=\"week 32, 2022\">32</a></li>\n      <li><a href=\"archive/2022/week/33.html\" title=\"week 33, 2022\">33</a></li>\n      <li><a href=\"archive/2022/week/34.html\" title=\"week 34, 2022\">34</a></li>\n      <li><a href=\"archive/2022/week/35.html\" title=\"week 35, 2022\">35</a></li>\n      <li><a href=\"archive/2022/week/36.html\" title=\"week 36, 2022\">36</a></li>\n      <li><a href=\"archive/2022/week/37.html\" title=\"week 37, 2022\">37</a></li>\n      <li><a href=\"archive/2022/week/38.html\" title=\"week 38, 2022\">38</a></li>\n      <li><a href=\"archive/2022/week/39.html\" title=\"week 39, 2022\">39</a></li>\n      <li><a href=\"archive/2022/week/40.html\" title=\"week 40, 2022\">40</a></li>\n      <li><a href=\"archive/2022/week/41.html\" title=\"week 41, 2022\">41</a></li>\n      <li><a href=\"archive/2022/week/42.html\" title=\"week 42, 2022\">42</a></li>\n      <li><a href=\"archive/2022/week/43.html\" title=\"week 43, 2022\">43</a></li>\n      <li><a href=\"archive/2022/week/44.html\" title=\"week 44, 2022\">44</a></li>\n      <li><a href=\"archive/2022/week/45.html\" title=\"week 45, 2022\">45</a></li>\n      <li><a href=\"archive/2022/week/46.html\" title=\"week 46, 2022\">46</a></li>\n      <li><a href=\"archive/2022/week/47.html\" title=\"week 47, 2022\">47</a></li>\n      <li><a href=\"archive/2022/week/48.html\" title=\"week 48, 2022\">48</a></li>\n      <li><a href=\"archive/2022/week/49.html\" title=\"week 49, 2022\">49</a></li>\n      <li><a href=\"archive/2022/week/50.html\" title=\"week 50, 2022\">50</a></li>\n      <li><a href=\"archive/2022/week/51.html\" title=\"week 51, 2022\">51</a></li>\n      <li><a href=\"archive/2022/week/52.html\" title=\"week 52, 2022\">52</a></li>\n    </ul>\n  </dd>\n  <dt><a href=\"archive/2021/\">2021</a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"archive/2021/week/01.html\" title=\"week 01, 2021\">01</a></li>\n      <li><a href=\"archive/2021/week/02.html\" title=\"week 02, 2021\">02</a></li>\n      <li><a href=\"archive/2021/week/03.html\" title=\"week 03, 2021\">03</a></li>\n      <li><a href=\"archive/2021/week/04.html\" title=\"week 04, 2021\">04</a></li>\n      <li><a href=\"archive/2021/week/05.html\" title=\"week 05, 2021\">05</a></li>\n      <li><a href=\"archive/2021/week/06.html\" title=\"week 06, 2021\">06</a></li>\n      <li><a href=\"archive/2021/week/07.html\" title=\"week 07, 2021\">07</a></li>\n      <li><a href=\"archive/2021/week/08.html\" title=\"week 08, 2021\">08</a></li>\n      <li><a href=\"archive/2021/week/09.html\" title=\"week 09, 2021\">09</a></li>\n      <li><a href=\"archive/2021/week/10.html\" title=\"week 10, 2021\">10</a></li>\n      <li><a href=\"archive/2021/week/11.html\" title=\"week 11, 2021\">11</a></li>\n      <li><a href=\"archive/2021/week/12.html\" title=\"week 12, 2021\">12</a></li>\n      <li><a href=\"archive/2021/week/13.html\" title=\"week 13, 2021\">13</a></li>\n      <li><a href=\"archive/2021/week/14.html\" title=\"week 14, 2021\">14</a></li>\n      <li><a href=\"archive/2021/week/15.html\" title=\"week 15, 2021\">15</a></li>\n      <li><a href=\"archive/2021/week/16.html\" title=\"week 16, 2021\">16</a></li>\n      <li><a href=\"archive/2021/week/17.html\" title=\"week 17, 2021\">17</a></li>\n      <li><a href=\"archive/2021/week/18.html\" title=\"week 18, 2021\">18</a></li>\n      <li><a href=\"archive/2021/week/19.html\" title=\"week 19, 2021\">19</a></li>\n      <li><a href=\"archive/2021/week/20.html\" title=\"week 20, 2021\">20</a></li>\n      <li><a href=\"archive/2021/week/21.html\" title=\"week 21, 2021\">21</a></li>\n      <li><a href=\"archive/2021/week/22.html\" title=\"week 22, 2021\">22</a></li>\n      <li><a href=\"archive/2021/week/23.html\" title=\"week 23, 2021\">23</a></li>\n      <li><a href=\"archive/2021/week/24.html\" title=\"week 24, 2021\">24</a></li>\n      <li><a href=\"archive/2021/week/25.html\" title=\"week 25, 2021\">25</a></li>\n      <li><a href=\"archive/2021/week/26.html\" title=\"week 26, 2021\">26</a></li>\n      <li><a href=\"archive/2021/week/27.html\" title=\"week 27, 2021\">27</a></li>\n      <li><a href=\"archive/2021/week/28.html\" title=\"week 28, 2021\">28</a></li>\n      <li><a href=\"archive/2021/week/29.html\" title=\"week 29, 2021\">29</a></li>\n      <li><a href=\"archive/2021/week/30.html\" title=\"week 30, 2021\">30</a></li>\n      <li><a href=\"archive/2021/week/31.html\" title=\"week 31, 2021\">31</a></li>\n      <li><a href=\"archive/2021/week/32.html\" title=\"week 32, 2021\">32</a></li>\n      <li><a href=\"archive/2021/week/33.html\" title=\"week 33, 2021\">33</a></li>\n      <li><a href=\"archive/2021/week/34.html\" title=\"week 34, 2021\">34</a></li>\n      <li><a href=\"archive/2021/week/35.html\" title=\"week 35, 2021\">35</a></li>\n      <li><a href=\"archive/2021/week/36.html\" title=\"week 36, 2021\">36</a></li>\n      <li><a href=\"archive/2021/week/37.html\" title=\"week 37, 2021\">37</a></li>\n      <li><a href=\"archive/2021/week/38.html\" title=\"week 38, 2021\">38</a></li>\n      <li><a href=\"archive/2021/week/39.html\" title=\"week 39, 2021\">39</a></li>\n      <li><a href=\"archive/2021/week/40.html\" title=\"week 40, 2021\">40</a></li>\n      <li><a href=\"archive/2021/week/41.html\" title=\"week 41, 2021\">41</a></li>\n      <li><a href=\"archive/2021/week/42.html\" title=\"week 42, 2021\">42</a></li>\n      <li><a href=\"archive/2021/week/43.html\" title=\"week 43, 2021\">43</a></li>\n      <li><a href=\"archive/2021/week/44.html\" title=\"week 44, 2021\">44</a></li>\n      <li><a href=\"archive/2021/week/45.html\" title=\"week 45, 2021\">45</a></li>\n      <li><a href=\"archive/2021/week/46.html\" title=\"week 46, 2021\">46</a></li>\n      <li><a href=\"archive/2021/week/47.html\" title=\"week 47, 2021\">47</a></li>\n      <li><a href=\"archive/2021/week/48.html\" title=\"week 48, 2021\">48</a></li>\n      <li><a href=\"archive/2021/week/49.html\" title=\"week 49, 2021\">49</a></li>\n      <li><a href=\"archive/2021/week/50.html\" title=\"week 50, 2021\">50</a></li>\n      <li><a href=\"archive/2021/week/51.html\" title=\"week 51, 2021\">51</a></li>\n      <li><a href=\"archive/2021/week/52.html\" title=\"week 52, 2021\">52</a></li>\n    </ul>\n  </dd>\n  <dt><a href=\"archive/2020/\">2020</a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"archive/2020/week/01.html\" title=\"week 01, 2020\">01</a></li>\n      <li><a href=\"archive/2020/week/02.html\" title=\"week 02, 2020\">02</a></li>\n      <li><a href=\"archive/2020/week/03.html\" title=\"week 03, 2020\">03</a></li>\n      <li><a href=\"archive/2020/week/04.html\" title=\"week 04, 2020\">04</a></li>\n      <li><a href=\"archive/2020/week/05.html\" title=\"week 05, 2020\">05</a></li>\n      <li><a href=\"archive/2020/week/06.html\" title=\"week 06, 2020\">06</a></li>\n      <li><a href=\"archive/2020/week/07.html\" title=\"week 07, 2020\">07</a></li>\n      <li><a href=\"archive/2020/week/08.html\" title=\"week 08, 2020\">08</a></li>\n      <li><a href=\"archive/2020/week/09.html\" title=\"week 09, 2020\">09</a></li>\n      <li><a href=\"archive/2020/week/10.html\" title=\"week 10, 2020\">10</a></li>\n      <li><a href=\"archive/2020/week/11.html\" title=\"week 11, 2020\">11</a></li>\n      <li><a href=\"archive/2020/week/12.html\" title=\"week 12, 2020\">12</a></li>\n      <li><a href=\"archive/2020/week/13.html\" title=\"week 13, 2020\">13</a></li>\n      <li><a href=\"archive/2020/week/14.html\" title=\"week 14, 2020\">14</a></li>\n      <li><a href=\"archive/2020/week/15.html\" title=\"week 15, 2020\">15</a></li>\n      <li><a href=\"archive/2020/week/16.html\" title=\"week 16, 2020\">16</a></li>\n      <li><a href=\"archive/2020/week/17.html\" title=\"week 17, 2020\">17</a></li>\n      <li><a href=\"archive/2020/week/18.html\" title=\"week 18, 2020\">18</a></li>\n      <li><a href=\"archive/2020/week/19.html\" title=\"week 19, 2020\">19</a></li>\n      <li><a href=\"archive/2020/week/20.html\" title=\"week 20, 2020\">20</a></li>\n      <li><a href=\"archive/2020/week/21.html\" title=\"week 21, 2020\">21</a></li>\n      <li><a href=\"archive/2020/week/22.html\" title=\"week 22, 2020\">22</a></li>\n      <li><a href=\"archive/2020/week/23.html\" title=\"week 23, 2020\">23</a></li>\n      <li><a href=\"archive/2020/week/24.html\" title=\"week 24, 2020\">24</a></li>\n      <li><a href=\"archive/2020/week/25.html\" title=\"week 25, 2020\">25</a></li>\n      <li><a href=\"archive/2020/week/26.html\" title=\"week 26, 2020\">26</a></li>\n      <li><a href=\"archive/2020/week/27.html\" title=\"week 27, 2020\">27</a></li>\n      <li><a href=\"archive/2020/week/28.html\" title=\"week 28, 2020\">28</a></li>\n      <li><a href=\"archive/2020/week/29.html\" title=\"week 29, 2020\">29</a></li>\n      <li><a href=\"archive/2020/week/30.html\" title=\"week 30, 2020\">30</a></li>\n      <li><a href=\"archive/2020/week/31.html\" title=\"week 31, 2020\">31</a></li>\n      <li><a href=\"archive/2020/week/32.html\" title=\"week 32, 2020\">32</a></li>\n      <li><a href=\"archive/2020/week/33.html\" title=\"week 33, 2020\">33</a></li>\n      <li><a href=\"archive/2020/week/34.html\" title=\"week 34, 2020\">34</a></li>\n      <li><a href=\"archive/2020/week/35.html\" title=\"week 35, 2020\">35</a></li>\n      <li><a href=\"archive/2020/week/36.html\" title=\"week 36, 2020\">36</a></li>\n      <li><a href=\"archive/2020/week/37.html\" title=\"week 37, 2020\">37</a></li>\n      <li><a href=\"archive/2020/week/38.html\" title=\"week 38, 2020\">38</a></li>\n      <li><a href=\"archive/2020/week/39.html\" title=\"week 39, 2020\">39</a></li>\n      <li><a href=\"archive/2020/week/40.html\" title=\"week 40, 2020\">40</a></li>\n      <li><a href=\"archive/2020/week/41.html\" title=\"week 41, 2020\">41</a></li>\n      <li><a href=\"archive/2020/week/42.html\" title=\"week 42, 2020\">42</a></li>\n      <li><a href=\"archive/2020/week/43.html\" title=\"week 43, 2020\">43</a></li>\n      <li><a href=\"archive/2020/week/44.html\" title=\"week 44, 2020\">44</a></li>\n      <li><a href=\"archive/2020/week/45.html\" title=\"week 45, 2020\">45</a></li>\n      <li><a href=\"archive/2020/week/46.html\" title=\"week 46, 2020\">46</a></li>\n      <li><a href=\"archive/2020/week/47.html\" title=\"week 47, 2020\">47</a></li>\n      <li><a href=\"archive/2020/week/48.html\" title=\"week 48, 2020\">48</a></li>\n      <li><a href=\"archive/2020/week/49.html\" title=\"week 49, 2020\">49</a></li>\n      <li><a href=\"archive/2020/week/50.html\" title=\"week 50, 2020\">50</a></li>\n      <li><a href=\"archive/2020/week/51.html\" title=\"week 51, 2020\">51</a></li>\n      <li><a href=\"archive/2020/week/52.html\" title=\"week 52, 2020\">52</a></li>\n      <li><a href=\"archive/2020/week/53.html\" title=\"week 53, 2020\">53</a></li>\n    </ul>\n  </dd>\n  <dt><a href=\"archive/2019/\">2019</a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"archive/2019/week/13.html\" title=\"week 13, 2019\">13</a></li>\n      <li><a href=\"archive/2019/week/14.html\" title=\"week 14, 2019\">14</a></li>\n      <li><a href=\"archive/2019/week/15.html\" title=\"week 15, 2019\">15</a></li>\n      <li><a href=\"archive/2019/week/16.html\" title=\"week 16, 2019\">16</a></li>\n      <li><a href=\"archive/2019/week/17.html\" title=\"week 17, 2019\">17</a></li>\n      <li><a href=\"archive/2019/week/18.html\" title=\"week 18, 2019\">18</a></li>\n      <li><a href=\"archive/2019/week/19.html\" title=\"week 19, 2019\">19</a></li>\n      <li><a href=\"archive/2019/week/20.html\" title=\"week 20, 2019\">20</a></li>\n      <li><a href=\"archive/2019/week/21.html\" title=\"week 21, 2019\">21</a></li>\n      <li><a href=\"archive/2019/week/22.html\" title=\"week 22, 2019\">22</a></li>\n      <li><a href=\"archive/2019/week/23.html\" title=\"week 23, 2019\">23</a></li>\n      <li><a href=\"archive/2019/week/24.html\" title=\"week 24, 2019\">24</a></li>\n      <li><a href=\"archive/2019/week/25.html\" title=\"week 25, 2019\">25</a></li>\n      <li><a href=\"archive/2019/week/26.html\" title=\"week 26, 2019\">26</a></li>\n      <li><a href=\"archive/2019/week/27.html\" title=\"week 27, 2019\">27</a></li>\n      <li><a href=\"archive/2019/week/28.html\" title=\"week 28, 2019\">28</a></li>\n      <li><a href=\"archive/2019/week/29.html\" title=\"week 29, 2019\">29</a></li>\n      <li><a href=\"archive/2019/week/30.html\" title=\"week 30, 2019\">30</a></li>\n      <li><a href=\"archive/2019/week/31.html\" title=\"week 31, 2019\">31</a></li>\n      <li><a href=\"archive/2019/week/32.html\" title=\"week 32, 2019\">32</a></li>\n      <li><a href=\"archive/2019/week/33.html\" title=\"week 33, 2019\">33</a></li>\n      <li><a href=\"archive/2019/week/34.html\" title=\"week 34, 2019\">34</a></li>\n      <li><a href=\"archive/2019/week/35.html\" title=\"week 35, 2019\">35</a></li>\n      <li><a href=\"archive/2019/week/36.html\" title=\"week 36, 2019\">36</a></li>\n      <li><a href=\"archive/2019/week/37.html\" title=\"week 37, 2019\">37</a></li>\n      <li><a href=\"archive/2019/week/38.html\" title=\"week 38, 2019\">38</a></li>\n      <li><a href=\"archive/2019/week/39.html\" title=\"week 39, 2019\">39</a></li>\n      <li><a href=\"archive/2019/week/40.html\" title=\"week 40, 2019\">40</a></li>\n      <li><a href=\"archive/2019/week/41.html\" title=\"week 41, 2019\">41</a></li>\n      <li><a href=\"archive/2019/week/42.html\" title=\"week 42, 2019\">42</a></li>\n      <li><a href=\"archive/2019/week/43.html\" title=\"week 43, 2019\">43</a></li>\n      <li><a href=\"archive/2019/week/44.html\" title=\"week 44, 2019\">44</a></li>\n      <li><a href=\"archive/2019/week/45.html\" title=\"week 45, 2019\">45</a></li>\n      <li><a href=\"archive/2019/week/46.html\" title=\"week 46, 2019\">46</a></li>\n      <li><a href=\"archive/2019/week/47.html\" title=\"week 47, 2019\">47</a></li>\n      <li><a href=\"archive/2019/week/48.html\" title=\"week 48, 2019\">48</a></li>\n      <li><a href=\"archive/2019/week/49.html\" title=\"week 49, 2019\">49</a></li>\n      <li><a href=\"archive/2019/week/50.html\" title=\"week 50, 2019\">50</a></li>\n      <li><a href=\"archive/2019/week/51.html\" title=\"week 51, 2019\">51</a></li>\n      <li><a href=\"archive/2019/week/52.html\" title=\"week 52, 2019\">52</a></li>\n    </ul>\n  </dd>\n</dl>\n      </nav>\n      <footer>\n        Copyright &copy; 2019–2023\n        <a href=\"http://johnbokma.com/\">John Bokma</a>.\n        Palette taken from the <a\n        href=\"https://github.com/jasonm23/emacs-soothe-theme\">Soothe\n        Theme</a> for Emacs by Jason Milkins. Pages generated with\n        <a\n          href=\"http://johnbokma.com/articles/tumblelog/\"\n        >tumblelog 5.1.3</a>.\n      </footer>\n    </div>\n  </body>\n</html>\n"

}
